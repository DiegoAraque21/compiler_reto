
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA CONNECT DIVIDE EXP LPAREN MINUS NONE NUMBER PLUS RPAREN SETTO STRING TIMES VARIABLE\n    statement : VARIABLE SETTO expression\n    \n    statement : VARIABLE SETTO flow\n    \n    flow : VARIABLE CONNECT flow_functions\n    \n    flow_functions : flow_function_call CONNECT flow_functions\n    \n    flow_functions : flow_function_call\n    \n    flow_function_call : VARIABLE LPAREN params RPAREN\n    \n    statement : expression\n    \n    expression : expression PLUS term\n    \n    expression : expression MINUS term\n    \n    expression : term \n                | string\n    \n    string : STRING\n    \n    term : term TIMES exponent\n    \n    term : term DIVIDE exponent\n    \n    term : exponent\n    \n    exponent : factor EXP factor\n    \n    exponent : factor\n    \n    factor : LPAREN expression RPAREN\n    \n    factor : NONE\n    \n    factor : NUMBER\n    \n    factor : VARIABLE\n    \n    factor : function_call\n    \n    function_call : VARIABLE LPAREN RPAREN\n    \n    function_call : VARIABLE LPAREN params RPAREN\n    \n    params : params COMMA expression\n            | expression\n    '
    
_lr_action_items = {'VARIABLE':([0,9,13,14,15,16,17,18,19,34,36,41,42,],[2,21,22,21,21,21,21,21,21,37,21,21,37,]),'STRING':([0,9,13,14,36,41,],[7,7,7,7,7,7,]),'LPAREN':([0,2,9,13,14,15,16,17,18,19,21,22,36,37,41,],[9,14,9,9,9,9,9,9,9,9,14,14,9,41,9,]),'NONE':([0,9,13,14,15,16,17,18,19,36,41,],[10,10,10,10,10,10,10,10,10,10,10,]),'NUMBER':([0,9,13,14,15,16,17,18,19,36,41,],[11,11,11,11,11,11,11,11,11,11,11,]),'$end':([1,2,3,4,5,6,7,8,10,11,12,21,22,23,24,25,28,29,30,31,32,33,35,38,39,44,45,],[0,-21,-7,-10,-11,-15,-12,-17,-19,-20,-22,-21,-21,-1,-2,-23,-8,-9,-13,-14,-16,-18,-24,-3,-5,-4,-6,]),'SETTO':([2,],[13,]),'EXP':([2,8,10,11,12,21,22,25,33,35,],[-21,19,-19,-20,-22,-21,-21,-23,-18,-24,]),'TIMES':([2,4,6,8,10,11,12,21,22,25,28,29,30,31,32,33,35,],[-21,17,-15,-17,-19,-20,-22,-21,-21,-23,17,17,-13,-14,-16,-18,-24,]),'DIVIDE':([2,4,6,8,10,11,12,21,22,25,28,29,30,31,32,33,35,],[-21,18,-15,-17,-19,-20,-22,-21,-21,-23,18,18,-13,-14,-16,-18,-24,]),'PLUS':([2,3,4,5,6,7,8,10,11,12,20,21,22,23,25,27,28,29,30,31,32,33,35,40,],[-21,15,-10,-11,-15,-12,-17,-19,-20,-22,15,-21,-21,15,-23,15,-8,-9,-13,-14,-16,-18,-24,15,]),'MINUS':([2,3,4,5,6,7,8,10,11,12,20,21,22,23,25,27,28,29,30,31,32,33,35,40,],[-21,16,-10,-11,-15,-12,-17,-19,-20,-22,16,-21,-21,16,-23,16,-8,-9,-13,-14,-16,-18,-24,16,]),'RPAREN':([4,5,6,7,8,10,11,12,14,20,21,25,26,27,28,29,30,31,32,33,35,40,43,],[-10,-11,-15,-12,-17,-19,-20,-22,25,33,-21,-23,35,-26,-8,-9,-13,-14,-16,-18,-24,-25,45,]),'COMMA':([4,5,6,7,8,10,11,12,21,25,26,27,28,29,30,31,32,33,35,40,43,],[-10,-11,-15,-12,-17,-19,-20,-22,-21,-23,36,-26,-8,-9,-13,-14,-16,-18,-24,-25,36,]),'CONNECT':([22,39,45,],[34,42,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,9,13,14,36,41,],[3,20,23,27,40,27,]),'term':([0,9,13,14,15,16,36,41,],[4,4,4,4,28,29,4,4,]),'string':([0,9,13,14,36,41,],[5,5,5,5,5,5,]),'exponent':([0,9,13,14,15,16,17,18,36,41,],[6,6,6,6,6,6,30,31,6,6,]),'factor':([0,9,13,14,15,16,17,18,19,36,41,],[8,8,8,8,8,8,8,8,32,8,8,]),'function_call':([0,9,13,14,15,16,17,18,19,36,41,],[12,12,12,12,12,12,12,12,12,12,12,]),'flow':([13,],[24,]),'params':([14,41,],[26,43,]),'flow_functions':([34,42,],[38,44,]),'flow_function_call':([34,42,],[39,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VARIABLE SETTO expression','statement',3,'p_assignment_assigns','lexer.py',126),
  ('statement -> VARIABLE SETTO flow','statement',3,'p_assignment_flow','lexer.py',136),
  ('flow -> VARIABLE CONNECT flow_functions','flow',3,'p_flow_form','lexer.py',146),
  ('flow_functions -> flow_function_call CONNECT flow_functions','flow_functions',3,'p_flow_functions','lexer.py',163),
  ('flow_functions -> flow_function_call','flow_functions',1,'p_flow_function','lexer.py',176),
  ('flow_function_call -> VARIABLE LPAREN params RPAREN','flow_function_call',4,'p_flow_function_call','lexer.py',182),
  ('statement -> expression','statement',1,'p_assignment_expression','lexer.py',194),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','lexer.py',200),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','lexer.py',210),
  ('expression -> term','expression',1,'p_expression_term','lexer.py',219),
  ('expression -> string','expression',1,'p_expression_term','lexer.py',220),
  ('string -> STRING','string',1,'p_string_def','lexer.py',226),
  ('term -> term TIMES exponent','term',3,'p_term_times','lexer.py',232),
  ('term -> term DIVIDE exponent','term',3,'p_term_divide','lexer.py',241),
  ('term -> exponent','term',1,'p_term_exponent','lexer.py',250),
  ('exponent -> factor EXP factor','exponent',3,'p_exponent_ext','lexer.py',256),
  ('exponent -> factor','exponent',1,'p_exponent_factor','lexer.py',265),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_exponent_paren','lexer.py',271),
  ('factor -> NONE','factor',1,'p_factor_none','lexer.py',279),
  ('factor -> NUMBER','factor',1,'p_factor_num','lexer.py',285),
  ('factor -> VARIABLE','factor',1,'p_factor_var','lexer.py',291),
  ('factor -> function_call','factor',1,'p_factor_function_call','lexer.py',297),
  ('function_call -> VARIABLE LPAREN RPAREN','function_call',3,'p_function_call_no_params','lexer.py',303),
  ('function_call -> VARIABLE LPAREN params RPAREN','function_call',4,'p_function_call_params','lexer.py',309),
  ('params -> params COMMA expression','params',3,'p_params','lexer.py',318),
  ('params -> expression','params',1,'p_params','lexer.py',319),
]
